name: Unit Test Unity

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name}}-${{github.ref_name}}
  cancel-in-progress: true

on:
  push:
    branches-ignore:
      - develop
      - master
      - 'CICD/**'
      - '[Aa]rt/**'
  workflow_dispatch: {}
  workflow_call: {}

env:
  PROJECT_PATH: ./
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  TARGET_PLATFORM: StandaloneWindows64 # Build a Windows 64-bit standalone.

jobs:
  testRunnerInAll:
    timeout-minutes: 60
    name: Test in ${{ matrix.testMode }} 📝
    runs-on: ubuntu-latest
    # needs: [resharper]
    strategy:
      matrix:
        testMode:
          - playmode
          - editmode
          - standalone

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      
      # LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v4.0.2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
      
      # Restore Library cache
      - name: Restore Library cache
        uses: actions/cache@v4.0.2
        with:
          path: ${{ env.PROJECT_PATH }}/Library
          key: Library-{{ env.PROJECT_PATH }}
          restore-keys: |
            Library-{{ env.PROJECT_PATH }}-
            Library-
      
      # Configure test runner
      - name: Run Tester
        uses: game-ci/unity-test-runner@v4
        id: tests
        env:
          UNITY_LICENSE: ${{ env.UNITY_LICENSE }}
        with:
          projectPath: ${{ env.PROJECT_PATH }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;'
      # OUTPUT
      - uses: actions/upload-artifact@v4.3.3
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}
      - uses: actions/upload-artifact@v4.3.3
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}